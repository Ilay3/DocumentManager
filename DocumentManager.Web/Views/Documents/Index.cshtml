@model List<DocumentManager.Web.Models.DocumentViewModel>

@{
    ViewData["Title"] = "Документы";
}

<div class="row mb-4">
    <div class="col-md-6">
        <h1 class="display-6 mb-0">
            <i class="bi bi-file-earmark-text text-primary me-2"></i> Документы
        </h1>
    </div>
    <div class="col-md-6 text-md-end mt-3 mt-md-0">
        <a href="@Url.Action("Create", "Documents")" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Создать документ
        </a>
    </div>
</div>

<!-- Filter Panel -->
<div class="filter-panel mb-4">
    <form id="filterForm" method="get" action="@Url.Action("Index", "Documents")">
        <div class="row g-3">
            <div class="col-md-3">
                <div class="form-floating">
                    <input type="text" class="form-control" id="factoryNumberFilter" name="factoryNumber" placeholder="Заводской номер" value="@ViewBag.FactoryNumber">
                    <label for="factoryNumberFilter">Заводской номер</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-floating">
                    <select class="form-select" id="templateFilter" name="templateId">
                        <option value="">Все типы</option>
                        @if (ViewBag.Templates != null)
                        {
                            foreach (var template in ViewBag.Templates)
                            {
                                if (ViewBag.TemplateId != null && ViewBag.TemplateId.ToString() == template.Id.ToString())
                                {
                                    <option value="@template.Id" selected>@template.Name</option>
                                }
                                else
                                {
                                    <option value="@template.Id">@template.Name</option>
                                }
                            }
                        }
                    </select>
                    <label for="templateFilter">Тип документа</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-floating">
                    <input type="date" class="form-control" id="dateFromFilter" name="dateFrom" value="@ViewBag.DateFrom">
                    <label for="dateFromFilter">Дата с</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-floating mb-3">
                    <input type="date" class="form-control" id="dateToFilter" name="dateTo" value="@ViewBag.DateTo">
                    <label for="dateToFilter">Дата по</label>
                </div>
            </div>
            <div class="col-md-8">
                <div class="input-group">
                    <span class="input-group-text bg-white"><i class="bi bi-search"></i></span>
                    <input type="text" class="form-control" id="searchFilter" name="search" placeholder="Поиск по документам..." value="@ViewBag.Search">
                    <button type="submit" class="btn btn-primary">Поиск</button>
                    <button type="button" id="resetFilter" class="btn btn-outline-secondary">Сбросить</button>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <div class="btn-group" role="group">
                    <input type="radio" class="btn-check" name="viewMode" id="listView" value="list" autocomplete="off" @(ViewBag.ViewMode != "grid" ? "checked" : "")>
                    <label class="btn btn-outline-primary" for="listView"><i class="bi bi-list"></i> Список</label>
                    
                    <input type="radio" class="btn-check" name="viewMode" id="gridView" value="grid" autocomplete="off" @(ViewBag.ViewMode == "grid" ? "checked" : "")>
                    <label class="btn btn-outline-primary" for="gridView"><i class="bi bi-grid-3x3-gap"></i> Плитка</label>
                </div>
            </div>
        </div>
    </form>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <div class="display-6 text-muted mb-4">
            <i class="bi bi-folder2-open"></i>
        </div>
        <h3>Документы не найдены</h3>
        <p class="text-muted">Попробуйте изменить параметры поиска или создайте новый документ</p>
        <a href="@Url.Action("Create", "Documents")" class="btn btn-primary mt-3">
            <i class="bi bi-plus-lg"></i> Создать документ
        </a>
    </div>
}
else
{
    <!-- Grid View (Cards) -->
    <div id="gridViewContainer" class="row g-3 @(ViewBag.ViewMode != "grid" ? "d-none" : "")">
        @foreach (var document in Model)
        {
            <div class="col-md-4 col-lg-3 document-item">
                <div class="card document-card h-100">
                    <div class="card-body d-flex flex-column">
                        <div class="document-type"> 
                            <span class="badge bg-light text-dark border">@document.TemplateName</span>
                        </div>
                        <div class="document-number">
                            @document.FactoryNumber
                        </div>
                        <div class="document-date mt-2">
                            <i class="bi bi-calendar3"></i> @document.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")
                        </div>
                        <div class="document-author">
                            <i class="bi bi-person"></i> @document.CreatedBy
                        </div>
                        
                        <div class="document-status mt-2">
                            @if (!string.IsNullOrWhiteSpace(document.GeneratedFilePath))
                            {
                                <span class="badge bg-success"><i class="bi bi-check-circle"></i> Сгенерирован</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark"><i class="bi bi-exclamation-circle"></i> Не сгенерирован</span>
                            }
                        </div>
                        
                        <div class="document-actions mt-auto pt-3 d-flex justify-content-between">
                            <button class="btn btn-sm btn-outline-primary show-document-details" 
                                    data-document-id="@document.Id" 
                                    data-document-title="@document.TemplateName - @document.FactoryNumber">
                                <i class="bi bi-info-circle"></i> Подробно
                            </button>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Details", "Documents", new { id = document.Id })">
                                            <i class="bi bi-eye"></i> Просмотр
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("GenerateAsync", "Documents", new { id = document.Id })">
                                            <i class="bi bi-gear"></i> Сгенерировать
                                        </a>
                                    </li>
                                    @if (!string.IsNullOrWhiteSpace(document.GeneratedFilePath))
                                    {
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("Download", "Documents", new { id = document.Id })">
                                                <i class="bi bi-download"></i> Скачать
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("PrintInBrowser", "Documents", new { id = document.Id })">
                                                <i class="bi bi-printer"></i> Печать
                                            </a>
                                        </li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item text-danger" href="@Url.Action("Delete", "Documents", new { id = document.Id })">
                                            <i class="bi bi-trash"></i> Удалить
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- List View (Table) -->
    <div id="listViewContainer" class="@(ViewBag.ViewMode == "grid" ? "d-none" : "")">
        <div class="card">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 30%;">Заводской номер</th>
                            <th style="width: 25%;">Тип документа</th>
                            <th>Дата создания</th>
                            <th>Создал</th>
                            <th>Статус</th>
                            <th style="width: 150px;">Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var document in Model)
                        {
                            <tr>
                                <td>
                                    <div class="fw-semibold">@document.FactoryNumber</div>
                                </td>
                                <td>@document.TemplateName</td>
                                <td>@document.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</td>
                                <td>@document.CreatedBy</td>
                                <td>
                                    @if (!string.IsNullOrWhiteSpace(document.GeneratedFilePath))
                                    {
                                        <span class="badge bg-success"><i class="bi bi-check-circle"></i> Сгенерирован</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark"><i class="bi bi-exclamation-circle"></i> Не сгенерирован</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary show-document-details" 
                                                data-document-id="@document.Id" 
                                                data-document-title="@document.TemplateName - @document.FactoryNumber">
                                            <i class="bi bi-info-circle"></i>
                                        </button>
                                        <div class="btn-group">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="bi bi-three-dots-vertical"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Details", "Documents", new { id = document.Id })">
                                                        <i class="bi bi-eye"></i> Просмотр
                                                    </a>
                                                </li>
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("GenerateAsync", "Documents", new { id = document.Id })">
                                                        <i class="bi bi-gear"></i> Сгенерировать
                                                    </a>
                                                </li>
                                                @if (!string.IsNullOrWhiteSpace(document.GeneratedFilePath))
                                                {
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("Download", "Documents", new { id = document.Id })">
                                                            <i class="bi bi-download"></i> Скачать
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("PrintInBrowser", "Documents", new { id = document.Id })">
                                                            <i class="bi bi-printer"></i> Печать
                                                        </a>
                                                    </li>
                                                }
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item text-danger" href="@Url.Action("Delete", "Documents", new { id = document.Id })">
                                                        <i class="bi bi-trash"></i> Удалить
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<!-- Pagination -->
@if (Model.Any() && ViewBag.TotalPages > 1)
{
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>
            <span class="text-muted">Показано @ViewBag.StartItem-@ViewBag.EndItem из @ViewBag.TotalItems</span>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">
                @{
                    bool isPrevDisabled = ViewBag.CurrentPage <= 1;
                    bool isNextDisabled = ViewBag.CurrentPage >= ViewBag.TotalPages;
                }
                <li class="page-item @(isPrevDisabled ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Documents", new { page = ViewBag.CurrentPage - 1, factoryNumber = ViewBag.FactoryNumber, templateId = ViewBag.TemplateId, dateFrom = ViewBag.DateFrom, dateTo = ViewBag.DateTo, search = ViewBag.Search, viewMode = ViewBag.ViewMode })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                {
                    bool isCurrentPage = i == ViewBag.CurrentPage;
                    <li class="page-item @(isCurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Documents", new { page = i, factoryNumber = ViewBag.FactoryNumber, templateId = ViewBag.TemplateId, dateFrom = ViewBag.DateFrom, dateTo = ViewBag.DateTo, search = ViewBag.Search, viewMode = ViewBag.ViewMode })">@i</a>
                    </li>
                }
                <li class="page-item @(isNextDisabled ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Documents", new { page = ViewBag.CurrentPage + 1, factoryNumber = ViewBag.FactoryNumber, templateId = ViewBag.TemplateId, dateFrom = ViewBag.DateFrom, dateTo = ViewBag.DateTo, search = ViewBag.Search, viewMode = ViewBag.ViewMode })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Toggle view mode
            $('#listView, #gridView').change(function() {
                $('#filterForm').submit();
            });
            
            // Reset filters
            $('#resetFilter').click(function() {
                $('#factoryNumberFilter').val('');
                $('#templateFilter').val('');
                $('#dateFromFilter').val('');
                $('#dateToFilter').val('');
                $('#searchFilter').val('');
                $('#filterForm').submit();
            });
            
            // Add highlight effect on search
            function highlightText() {
                const searchValue = $('#searchFilter').val().trim();
                if (searchValue.length > 0) {
                    $('.document-card, tr').each(function() {
                        const text = $(this).text();
                        if (text.toLowerCase().includes(searchValue.toLowerCase())) {
                            // Simple highlight for demonstration purposes
                            $(this).addClass('border-primary');
                        }
                    });
                }
            }
            
            highlightText();
        });
    </script>
}
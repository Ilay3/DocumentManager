@model List<DocumentManager.Web.Models.DocumentTemplateViewModel>

@{
    ViewData["Title"] = "Шаблоны документов";
}
<link rel="stylesheet" href="~/css/template-categories.css" />
<div class="row mb-4">
    <div class="col-md-6">
        <h1 class="display-6 mb-0">
            <i class="bi bi-file-earmark-ruled text-primary me-2"></i> Шаблоны документов
        </h1>
        <p class="text-muted mt-2">Список доступных шаблонов для создания документов</p>
    </div>
    <div class="col-md-6 text-md-end mt-3 mt-md-0">
        <a href="@Url.Action("Index", "TemplatesAdmin")" class="btn btn-outline-primary">
            <i class="bi bi-gear"></i> Управление шаблонами
        </a>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <div class="display-6 text-muted mb-4">
            <i class="bi bi-folder2-open"></i>
        </div>
        <h3>Шаблоны не найдены</h3>
        <p class="text-muted">В системе пока нет доступных шаблонов документов</p>
    </div>
}
else
{
    <!-- Поиск шаблонов -->
    <!-- Улучшенный поиск шаблонов -->
    <div class="filter-panel mb-4">
        <div class="row g-3">
            <div class="col-md-12">
                <div class="input-group position-relative">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-search text-primary"></i>
                    </span>
                    <input type="search" id="templateSearchInput" class="form-control border-start-0 shadow-none"
                           placeholder="Поиск по названию, коду или типу шаблона...">
                    <!-- Кнопка очистки добавляется JavaScript-ом -->
                </div>
                <div class="form-text text-muted small mt-1">
                    <i class="bi bi-info-circle"></i>
                    Введите текст для поиска шаблонов
                </div>
            </div>
        </div>
    </div>

    <!-- Вкладки категорий шаблонов -->
    <div class="template-categories mb-4">
        <ul class="nav nav-tabs template-tabs" id="templateTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="passports-tab" data-bs-toggle="tab" data-bs-target="#passports-pane"
                        type="button" role="tab" aria-controls="passports-pane" aria-selected="true">
                    <i class="bi bi-journal-bookmark"></i> Паспорта
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="packing-lists-tab" data-bs-toggle="tab" data-bs-target="#packing-lists-pane"
                        type="button" role="tab" aria-controls="packing-lists-pane" aria-selected="false">
                    <i class="bi bi-box-seam"></i> Упаковочные листы
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="packing-inventories-tab" data-bs-toggle="tab" data-bs-target="#packing-inventories-pane"
                        type="button" role="tab" aria-controls="packing-inventories-pane" aria-selected="false">
                    <i class="bi bi-clipboard-check"></i> Упаковочная ведомость
                </button>
            </li>
        </ul>
    </div>

    <!-- Содержимое вкладок -->
    <div class="tab-content" id="templateTabsContent">
        <!-- Паспорта -->
        <div class="tab-pane fade show active" id="passports-pane" role="tabpanel" aria-labelledby="passports-tab">
            <div class="category-header">
                <h3 class="category-title">Паспорта</h3>
                <p class="text-muted">Паспорта устройств с техническими характеристиками и информацией о настройках</p>
            </div>

            <div class="row g-4">
                @{
                    var passportTemplates = Model.Where(t => t.Type == "Passport").ToList();
                    if (!passportTemplates.Any())
                    {
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i> Шаблоны паспортов не найдены
                            </div>
                        </div>
                    }
                    else
                    {
                        foreach (var template in passportTemplates)
                        {
                            <div class="col-md-6 col-lg-4">
                                <div class="card h-100 template-card passport-card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="template-icon me-3">
                                                <i class="bi bi-journal-bookmark fs-4"></i>
                                            </div>
                                            <div>
                                                <h5 class="card-title mb-0">@template.Name</h5>
                                                <div class="text-muted small">@template.Code</div>
                                            </div>
                                        </div>

                                        <div class="template-type mb-3">
                                            <span class="badge bg-primary">Паспорт</span>
                                            @if (template.IsActive)
                                            {
                                                <span class="badge bg-success ms-1">Активен</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger ms-1">Отключен</span>
                                            }
                                        </div>

                                        <div class="template-actions mt-auto pt-3 d-flex">
                                            <a asp-action="Details" asp-route-id="@template.Id" class="btn btn-sm btn-outline-primary me-2">
                                                <i class="bi bi-info-circle"></i> Подробности
                                            </a>
                                            @if (template.IsActive)
                                            {
                                                <a asp-controller="Documents" asp-action="CreateForm" asp-route-id="@template.Id" class="btn btn-sm btn-primary">
                                                    <i class="bi bi-plus-circle"></i> Создать
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>

        <!-- Упаковочные листы -->
        <div class="tab-pane fade" id="packing-lists-pane" role="tabpanel" aria-labelledby="packing-lists-tab">
            <div class="category-header">
                <h3 class="category-title">Упаковочные листы</h3>
                <p class="text-muted">Упаковочные листы с перечнем комплектующих и аксессуаров</p>
            </div>

            <div class="row g-4">
                @{
                    var packingListTemplates = Model.Where(t => t.Type == "PackingList").ToList();
                    if (!packingListTemplates.Any())
                    {
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i> Шаблоны упаковочных листов не найдены
                            </div>
                        </div>
                    }
                    else
                    {
                        foreach (var template in packingListTemplates)
                        {
                            <div class="col-md-6 col-lg-4">
                                <div class="card h-100 template-card packing-list-card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="template-icon me-3">
                                                <i class="bi bi-box-seam fs-4"></i>
                                            </div>
                                            <div>
                                                <h5 class="card-title mb-0">@template.Name</h5>
                                                <div class="text-muted small">@template.Code</div>
                                            </div>
                                        </div>

                                        <div class="template-type mb-3">
                                            <span class="badge bg-success">Упаковочный лист</span>
                                            @if (template.IsActive)
                                            {
                                                <span class="badge bg-success ms-1">Активен</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger ms-1">Отключен</span>
                                            }
                                        </div>

                                        <div class="template-actions mt-auto pt-3 d-flex">
                                            <a asp-action="Details" asp-route-id="@template.Id" class="btn btn-sm btn-outline-success me-2">
                                                <i class="bi bi-info-circle"></i> Подробности
                                            </a>
                                            @if (template.IsActive)
                                            {
                                                <a asp-controller="Documents" asp-action="CreateForm" asp-route-id="@template.Id" class="btn btn-sm btn-success">
                                                    <i class="bi bi-plus-circle"></i> Создать
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>

        <!-- Упаковочная ведомость -->
        <div class="tab-pane fade" id="packing-inventories-pane" role="tabpanel" aria-labelledby="packing-inventories-tab">
            <div class="category-header">
                <h3 class="category-title">Упаковочная ведомость</h3>
                <p class="text-muted">Сводные упаковочные ведомости для регистрации и учета поставок</p>
            </div>

            <div class="row g-4">
                @{
                    var packingInventoryTemplates = Model.Where(t => t.Type == "PackingInventory").ToList();
                    if (!packingInventoryTemplates.Any())
                    {
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i> Шаблоны упаковочных ведомостей не найдены
                            </div>
                        </div>
                    }
                    else
                    {
                        foreach (var template in packingInventoryTemplates)
                        {
                            <div class="col-md-6 col-lg-4">
                                <div class="card h-100 template-card packing-inventory-card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="template-icon me-3">
                                                <i class="bi bi-clipboard-check fs-4"></i>
                                            </div>
                                            <div>
                                                <h5 class="card-title mb-0">@template.Name</h5>
                                                <div class="text-muted small">@template.Code</div>
                                            </div>
                                        </div>

                                        <div class="template-type mb-3">
                                            <span class="badge bg-info">Упаковочная ведомость</span>
                                            @if (template.IsActive)
                                            {
                                                <span class="badge bg-success ms-1">Активен</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger ms-1">Отключен</span>
                                            }
                                        </div>

                                        <div class="template-actions mt-auto pt-3 d-flex">
                                            <a asp-action="Details" asp-route-id="@template.Id" class="btn btn-sm btn-outline-info me-2">
                                                <i class="bi bi-info-circle"></i> Подробности
                                            </a>
                                            @if (template.IsActive)
                                            {
                                                <a asp-controller="Documents" asp-action="CreateForm" asp-route-id="@template.Id" class="btn btn-sm btn-info">
                                                    <i class="bi bi-plus-circle"></i> Создать
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
}

    <style>
        /* Стили для поля поиска */
        #templateSearchInput {
            transition: all 0.3s ease;
        }

            #templateSearchInput:focus {
                box-shadow: 0 0 0 0.2rem rgba(58, 123, 213, 0.15) !important;
            }

        /* Анимация для результатов поиска */
        .template-card {
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        /* Стили для кнопки очистки поиска */
        #clearSearch {
            cursor: pointer;
            opacity: 0.7;
            transition: opacity 0.2s;
        }

            #clearSearch:hover {
                opacity: 1;
            }

        /* Подсветка найденного текста */
        .highlight {
            background-color: rgba(255, 230, 0, 0.3);
            padding: 0 2px;
            border-radius: 2px;
        }

        /* Стили для сообщения об отсутствии результатов */
        .no-results-message {
            transition: opacity 0.3s ease;
            opacity: 0.9;
        }

    .nav-link .badge {
        font-weight: 600; /* Делаем цифры более жирными */
        min-width: 20px; /* Минимальная ширина для лучшего отображения */
        display: inline-flex;
        justify-content: center;
    }

    /* Для неактивных вкладок - белый текст */
    .nav-link:not(.active) .badge {
        color: white !important;
    }

    /* Для активной вкладки - черный текст */
    .nav-link.active .badge {
        color: black !important;
    }


    </style>

@section Scripts {
    <script src="~/js/template-categories.js"></script>
    <script>
        $(document).ready(function () {
            // Получаем ссылку на поле поиска
            const searchInput = $('#templateSearchInput');

            // Получаем ссылки на все карточки шаблонов
            const templateCards = $('.template-card');

            // Получаем ссылки на вкладки
            const tabPanes = $('.tab-pane');

            // Обновляем счетчики при поиске
            function updateCounters() {
                // Для каждой вкладки обновляем счетчик
                $('.nav-link[data-bs-toggle="tab"]').each(function () {
                    const tabId = $(this).attr('data-bs-target');
                    const visibleCards = $(tabId).find('.template-card:visible').length;

                    // Находим или создаем бейдж с счетчиком
                    let badge = $(this).find('.badge');
                    if (badge.length === 0) {
                        badge = $('<span class="ms-2 badge rounded-pill"></span>');
                        $(this).append(badge);
                    }

                    // Обновляем стиль и текст бейджа
                    if ($(this).hasClass('active')) {
                        badge.removeClass('bg-secondary').addClass('bg-white text-primary');
                    } else {
                        badge.removeClass('bg-white text-primary').addClass('bg-secondary');
                    }

                    badge.text(visibleCards);
                });
            }

            // Функция для фильтрации шаблонов
            function filterTemplates() {
                const searchText = searchInput.val().toLowerCase().trim();
                let visibleCount = 0;

                if (searchText === '') {
                    // Если поиск пуст, показываем все карточки
                    templateCards.show();
                    tabPanes.each(function () {
                        $(this).find('.no-results-message').remove();
                    });
                    updateCounters();
                    return;
                }

                // Проходим по всем карточкам и проверяем совпадение
                templateCards.each(function () {
                    const card = $(this);
                    // Исправленные селекторы для соответствия вашей HTML-структуре
                    const templateName = card.find('.card-title').text().toLowerCase();
                    const templateCode = card.find('.text-muted.small').text().toLowerCase();
                    const templateType = card.find('.badge').first().text().toLowerCase();

                    // Отладка - для проверки значений
                    console.log('Карточка:', { name: templateName, code: templateCode, type: templateType });

                    // Проверяем, содержит ли название, код или тип искомый текст
                    if (templateName.includes(searchText) ||
                        templateCode.includes(searchText) ||
                        templateType.includes(searchText)) {
                        card.show();
                        visibleCount++;
                    } else {
                        card.hide();
                    }
                });

                // Проверяем наличие результатов в каждой вкладке
                tabPanes.each(function () {
                    const pane = $(this);
                    const visibleCards = pane.find('.template-card:visible').length;

                    // Удаляем предыдущие сообщения об отсутствии результатов
                    pane.find('.no-results-message').remove();

                    // Если во вкладке нет видимых карточек, показываем сообщение
                    if (visibleCards === 0) {
                        const message = $('<div class="no-results-message alert alert-info mt-3">' +
                            '<i class="bi bi-info-circle me-2"></i>' +
                            'По запросу "<strong>' + searchText + '</strong>" ничего не найдено</div>');
                        pane.append(message);
                    }
                });

                // Обновляем счетчики на вкладках
                updateCounters();
            }

            // Обработчик события ввода в поле поиска
            searchInput.on('input', function () {
                filterTemplates();
            });

            // Обработчик события очистки поля поиска (нажатие на X)
            searchInput.on('search', function () {
                filterTemplates();
            });

            // Обработчик изменения вкладок
            $('.nav-link[data-bs-toggle="tab"]').on('shown.bs.tab', function () {
                updateCounters();
            });

            // Добавляем кнопку очистки поиска
            searchInput.parent().append('<button id="clearSearch" class="btn btn-link position-absolute end-0 top-0 text-secondary" ' +
                'style="z-index: 5; padding: 0.375rem 0.75rem; display: none;">' +
                '<i class="bi bi-x-circle"></i></button>');

            // Обработчик для кнопки очистки
            $('#clearSearch').on('click', function () {
                searchInput.val('');
                $(this).hide();
                filterTemplates();
                searchInput.focus();
            });

            // Показываем/скрываем кнопку очистки в зависимости от наличия текста
            searchInput.on('input', function () {
                if ($(this).val().length > 0) {
                    $('#clearSearch').show();
                } else {
                    $('#clearSearch').hide();
                }
            });

            // Начальная инициализация счетчиков
            updateCounters();
        });
    </script>
}
